<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="Simulacao"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="Simulacao">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="Simulacao"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(340,290)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="initial" val="0x3"/>
      <a name="label" val="A"/>
      <a name="labelfont" val="SansSerif plain 16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(340,380)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="initial" val="0x20"/>
      <a name="label" val="B"/>
      <a name="labelfont" val="SansSerif plain 16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(340,440)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Tamanho"/>
      <a name="labelfont" val="SansSerif plain 16"/>
      <a name="width" val="2"/>
    </comp>
    <comp lib="0" loc="(340,470)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Modo"/>
      <a name="labelfont" val="SansSerif plain 16"/>
    </comp>
    <comp lib="0" loc="(670,400)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Saida"/>
      <a name="labelfont" val="SansSerif plain 16"/>
      <a name="output" val="true"/>
      <a name="width" val="32"/>
    </comp>
    <comp loc="(640,400)" name="SomadorVetorial">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(340,290)" to="(370,290)"/>
    <wire from="(340,380)" to="(350,380)"/>
    <wire from="(340,440)" to="(420,440)"/>
    <wire from="(340,460)" to="(340,470)"/>
    <wire from="(340,460)" to="(420,460)"/>
    <wire from="(350,380)" to="(350,420)"/>
    <wire from="(350,420)" to="(420,420)"/>
    <wire from="(370,290)" to="(370,400)"/>
    <wire from="(370,400)" to="(420,400)"/>
    <wire from="(640,400)" to="(670,400)"/>
  </circuit>
  <vhdl name="SomadorVetorial">library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity SomadorVetorial is
    Port ( A_i		: in  STD_LOGIC_VECTOR (31 downto 0);
           B_i		: in  STD_LOGIC_VECTOR (31 downto 0);
           vecSize_i: in  STD_LOGIC_VECTOR (1 downto 0); -- Tamanho: 00 -&gt; 4,01 -&gt; 8, 10 -&gt; 16 e 11 -&gt; 32
           mode_i 	: in  STD_LOGIC; -- Operação: Soma -&gt; 0 e Subtração -&gt; 1
           S_o 	: out  STD_LOGIC_VECTOR (31 downto 0));
end SomadorVetorial;

architecture arq_SomadorVetorial of SomadorVetorial is

signal c_G		: std_logic_vector (31 downto 0); -- Carry Generate
signal c_P		: std_logic_vector (31 downto 0); -- Carry Propagate
signal c_C		: std_logic_vector (31 downto 0); -- Carry
signal aux_B		: std_logic_vector (31 downto 0); -- B auxiliar
signal aux_Soma	: std_logic_vector (31 downto 0); -- Soma auxiliar

begin

aux_B &lt;= B_i	when (mode_i = '0') else
			not(B_i) when (mode_i = '1');
			
generate_GP: for i in 0 to 31 GENERATE
	c_G(i) &lt;= (A_i(i) and aux_B(i));
	c_P(i) &lt;= (A_i(i) xor aux_B(i));
end GENERATE generate_GP;

--Início do bloco 4,8,16,32
c_C(0) &lt;= '0' when (mode_i = '0') else
		'1' when (mode_i = '1'); --4,8,16,32
			 
c_C(1) &lt;= c_G(0) or (c_P(0) and c_C(0)); --4,8,16,32

c_C(2) &lt;= c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0)))); --4,8,16,32

c_C(3) &lt;= c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0)))))); --4,8,16,32

--Início do bloco 4
c_C(4) &lt;= '0' when (mode_i = '0' and vecSize_i = "00") else
		'1' when (mode_i = '1' and vecSize_i = "00") else -- 4
		c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0)))))))); --8,16,32

c_C(5) &lt;=	c_G(4) or (c_P(4) and c_C(4)) when(vecSize_i = "00") else	-- 4
		c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0)))))))))); --8,16,32
				
c_C(6) &lt;=	c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and c_C(4)))) when(vecSize_i = "00") else -- 4
		c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0)))))))))))); --8,16,32
				
c_C(7) &lt;=	c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and c_C(4)))))) when(vecSize_i = "00") else	--4
		c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0)))))))))))))); --8,16,32

--Início do bloco 4,8
c_C(8) &lt;= '0' when (mode_i = '0' and (vecSize_i = "00" or vecSize_i = "01")) else
		'1' when (mode_i = '1' and (vecSize_i = "00" or vecSize_i = "01")) else --4,8
		c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0)))))))))))))))); --16,32

c_C(9) &lt;= c_G(8) or (c_P(8) and c_C(8)) when (vecSize_i = "00" or vecSize_i = "01") else --4,8
		c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0)))))))))))))))))); -- 16,32

c_C(10) &lt;=c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and c_C(8)))) when (vecSize_i = "00" or vecSize_i = "01") else --4,8
		c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0)))))))))))))))))))); -- 16,32

c_C(11) &lt;=c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and c_C(8)))))) when (vecSize_i = "00" or vecSize_i = "01") else --4,8
		c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0)))))))))))))))))))))); -- 16,32

--Início do bloco 4
c_C(12) &lt;='0' when (mode_i = '0' and vecSize_i = "00") else
		'1' when (mode_i = '1' and vecSize_i = "00") else -- 4
		c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and c_C(8)))))))) when (vecSize_i = "01") else --8
		c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))));--16,32


c_C(13) &lt;=c_G(12) or (c_P(12) and c_C(12)) when(vecSize_i = "00") else --4
		c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and c_C(8)))))))))) when (vecSize_i = "01") else--8
		c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))));--16,32

c_C(14) &lt;=c_G(13) or(c_P(13) and(c_G(12) or (c_P(12) and c_C(12)))) when(vecSize_i = "00")else	--4
		c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and c_C(8)))))))))))) when (vecSize_i = "01") else--8
		c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))));--16,32

c_C(15) &lt;=c_G(14) or(c_P(14) and(c_G(13) or(c_P(13) and(c_G(12) or (c_P(12) and c_C(12)))))) when(vecSize_i = "00") else	--4
		c_G(14) or(c_P(14) and(c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and c_C(8)))))))))))))) when (vecSize_i = "01") else--8
		c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))));--16,32

--Início do bloco 4,8,16
c_C(16) &lt;='0' when (mode_i = '0' and ((vecSize_i = "00" or vecSize_i = "01") or vecSize_i = "11" )) else
		'1' when (mode_i = '1' and ((vecSize_i = "00" or vecSize_i = "01") or vecSize_i = "11" )) else --4,8,16
		c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))));--32

c_C(17) &lt;=c_G(16) or (c_P(16) and c_C(16)) when(vecSize_i = "00" or (vecSize_i = "01" or vecSize_i = "10" )) else--4,8,16
		c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))));--32

c_C(18) &lt;=c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))) when(vecSize_i = "00" or (vecSize_i = "01" or vecSize_i = "10" )) else--4,8,16
		c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))));--32

c_C(19) &lt;=c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))) when(vecSize_i = "00" or (vecSize_i = "01" or vecSize_i = "10" )) else--4,8,16
		c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))));--32

--Início do bloco 4
c_C(20) &lt;='0' when (mode_i = '0' and vecSize_i = "00") else
		'1' when (mode_i = '1' and vecSize_i = "00") else --4
		c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))))) when(vecSize_i = "01" or vecSize_i = "10" )else--8,16
		c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(	c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))))));--32

c_C(21) &lt;=c_G(20) or (c_P(20) and c_C(20)) when(vecSize_i = "00") else--4
		c_G(20) or(c_P(20) and(c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))))))) when(vecSize_i = "01" or vecSize_i = "10" )else--8,16
		c_G(20) or(c_P(20) and(	c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(	c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))))))));--32

c_C(22) &lt;=c_G(21) or(c_P(21) and(c_G(20) or (c_P(20) and c_C(20)))) when(vecSize_i = "00") else--4
		c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))))))))) when(vecSize_i = "01" or vecSize_i = "10" )else--8,16
		c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(	c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(	c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))))))))));--32

c_C(23) &lt;=c_G(22) or(c_P(22) and(c_G(21) or(c_P(21) and(c_G(20) or (c_P(20) and c_C(20)))))) when(vecSize_i = "00") else--4
		c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))))))))))) when(vecSize_i = "01" or vecSize_i = "10" )else--8,16
		c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(	c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(	c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))))))))))));--32

--Início do bloco 4,8
c_C(24) &lt;='0' when (mode_i = '0' and (vecSize_i = "00" or vecSize_i = "01")) else
		'1' when (mode_i = '1' and (vecSize_i = "00" or vecSize_i = "01")) else --4,8
		c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))))))))))))) when(vecSize_i = "10" )else--16
		c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(	c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(	c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))))))))))))));--32

c_C(25) &lt;=c_G(24) or(c_P(24) and(c_C(24)))when(vecSize_i = "00" or vecSize_i = "01")else--4,8
		c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))))))))))))))) when(vecSize_i = "10" )else--16
		c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(	c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(	c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))))))))))))))));--32

c_C(26) &lt;=c_G(25) or(c_P(25) and(c_G(24) or(c_P(24) and(c_C(24)))))when(vecSize_i = "00" or vecSize_i = "01")else--4,8
		c_G(25) or(c_P(25) and(c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))))))))))))))))) when(vecSize_i = "10" )else--16
		c_G(25) or(c_P(25) and(	c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(	c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(	c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))))))))))))))))));--32

c_C(27) &lt;=c_G(26) or(c_P(26) and(c_G(25) or(c_P(25) and(c_G(24) or(c_P(24) and(c_C(24)))))))when(vecSize_i = "00" or vecSize_i = "01")else--4,8
		c_G(26) or(c_P(26) and(c_G(25) or(c_P(25) and(c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))))))))))))))))))) when(vecSize_i = "10" )else--16
		c_G(26) or(c_P(26) and(	c_G(25) or(c_P(25) and(	c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(	c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(	c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))))))))))))))))))));--32

--Início do bloco 4
c_C(28) &lt;='0' when (mode_i = '0' and vecSize_i = "00") else
		'1' when (mode_i = '1' and vecSize_i ="00") else --4
		c_G(27) or(c_P(27) and(c_G(26) or(c_P(26) and(c_G(25) or(c_P(25) and(c_G(24) or(c_P(24) and(c_C(24)))))))))when(vecSize_i = "01" )else--8
		c_G(27) or(c_P(27) and(c_G(26) or(c_P(26) and(c_G(25) or(c_P(25) and(c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))))))))))))))))))))) when(vecSize_i = "10" )else--16
		c_G(27) or(c_P(27) and(c_G(26) or(c_P(26) and(	c_G(25) or(c_P(25) and(	c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(	c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(	c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))))))))))))))))))))));--32

c_C(29) &lt;=c_G(28) or(c_P(28) and(c_C(28)))when(vecSize_i = "00" )else --4
		c_G(28) or(c_P(28) and(c_G(27) or(c_P(27) and(c_G(26) or(c_P(26) and(c_G(25) or(c_P(25) and(c_G(24) or(c_P(24) and(c_C(24)))))))))))when(vecSize_i = "01" )else--8
		c_G(28) or(c_P(28) and(c_G(27) or(c_P(27) and(c_G(26) or(c_P(26) and(c_G(25) or(c_P(25) and(c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))))))))))))))))))))))) when(vecSize_i = "10" )else--16
		c_G(28) or(c_P(28) and(	c_G(27) or(c_P(27) and(c_G(26) or(c_P(26) and(	c_G(25) or(c_P(25) and(	c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(	c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(	c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))))))))))))))))))))))));--32


c_C(30) &lt;=c_G(29) or(c_P(29) and(c_G(28) or(c_P(28) and(c_C(28)))))when(vecSize_i = "00" )else -- 4
		c_G(29) or(c_P(29) and(c_G(28) or(c_P(28) and(c_G(27) or(c_P(27) and(c_G(26) or(c_P(26) and(c_G(25) or(c_P(25) and(c_G(24) or(c_P(24) and(c_C(24)))))))))))))when(vecSize_i = "01" )else--8
		c_G(29) or(c_P(29) and(c_G(28) or(c_P(28) and(c_G(27) or(c_P(27) and(c_G(26) or(c_P(26) and(c_G(25) or(c_P(25) and(c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))))))))))))))))))))))))) when(vecSize_i = "10" )else--16
		c_G(29) or(c_P(29) and(c_G(28) or(c_P(28) and(	c_G(27) or(c_P(27) and(c_G(26) or(c_P(26) and(	c_G(25) or(c_P(25) and(	c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(	c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(	c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));--32

c_C(31) &lt;=c_G(30) or(c_P(30) and(c_G(29) or(c_P(29) and(c_G(28) or(c_P(28) and(c_C(28)))))))when(vecSize_i = "00" )else -- 4
		c_G(30) or(c_P(30) and(c_G(29) or(c_P(29) and(c_G(28) or(c_P(28) and(c_G(27) or(c_P(27) and(c_G(26) or(c_P(26) and(c_G(25) or(c_P(25) and(c_G(24) or(c_P(24) and(c_C(24)))))))))))))))when(vecSize_i = "01" )else--8
		c_G(30) or(c_P(30) and(c_G(29) or(c_P(29) and(c_G(28) or(c_P(28) and(c_G(27) or(c_P(27) and(c_G(26) or(c_P(26) and(c_G(25) or(c_P(25) and(c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(c_G(17) or(c_P(17) and(c_G(16) or (c_P(16) and c_C(16)))))))))))))))))))))))))))))) when(vecSize_i = "10" )else--16
		c_G(30) or(c_P(30) and(c_G(29) or(c_P(29) and(c_G(28) or(c_P(28) and(	c_G(27) or(c_P(27) and(c_G(26) or(c_P(26) and(	c_G(25) or(c_P(25) and(	c_G(24) or(c_P(24) and(	c_G(23) or(c_P(23) and(c_G(22) or(c_P(22) and(	c_G(21) or(c_P(21) and(	c_G(20) or(c_P(20) and(	c_G(19) or(c_P(19) and(c_G(18) or(c_P(18) and(	c_G(17) or(c_P(17) and(	c_G(16) or(c_P(16) and(c_G(15) or(c_P(15) and(c_G(14) or(c_P(14) and(	c_G(13) or(c_P(13) and(c_G(12) or(c_P(12) and(c_G(11) or(c_P(11) and(c_G(10) or(c_P(10) and(c_G(9) or (c_P(9) and(c_G(8) or (c_P(8) and (c_G(7) or(c_P(7) and(c_G(6) or(c_P(6) and(c_G(5) or(c_P(5) and(c_G(4) or (c_P(4) and (c_G(3) or (c_P(3) and (c_G(2) or(c_P(2) and (c_G(1) or (c_P(1) and (c_G(0) or (c_P(0) and c_C(0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));--32

generate_soma: for j in 0 to 31 GENERATE
	S_o(j) &lt;= ((A_i(j) xor aux_B(j))xor c_C(j));
end GENERATE generate_soma;


end arq_SomadorVetorial;</vhdl>
</project>
